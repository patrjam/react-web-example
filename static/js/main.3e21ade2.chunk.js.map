{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","handleSubmit","event","preventDefault","document","getElementById","scrollIntoView","setState","type","message","sendFormData","setTimeout","reset","render","state","classString","status","id","className","src","logo","alt","action","onSubmit","htmlFor","name","required","value","rows","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,kC,gMCiI5BC,G,wDA5Hb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,aAAe,SAAAC,GACbA,EAAMC,iBAENC,SAASC,eAAe,WAAWC,iBACnC,EAAKC,SAAS,CAAEC,KAAM,OAAQC,QAAS,cAAgB,EAAKC,eAZ3C,EAkBnBA,aAAe,WACbC,YAAW,WACT,EAAKJ,SAAS,CACZC,KAAM,UACNC,QACE,yEAEJL,SAASC,eAAe,gBAAgBO,UACvC,MA1Bc,EA6BnBC,OAAS,WACP,GAAI,EAAKC,MAAMN,MAAQ,EAAKM,MAAML,QAChC,IAAIM,EAAc,eAAiB,EAAKD,MAAMN,KAC1CQ,EACF,yBAAKC,GAAG,SAASC,UAAWH,GACzB,EAAKD,MAAML,SAKlB,OACE,yBAAKS,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,UAE3C,yBAAKH,UAAU,aACb,wBAAID,GAAG,WAAP,wDAGCD,EACD,0BAAMC,GAAG,eAAeK,OAAO,GAAGC,SAAU,EAAKtB,cAC/C,yBAAKiB,UAAU,cACb,2BAAOM,QAAQ,QAAf,UACA,2BACEN,UAAU,eACVO,KAAK,OACLC,UAAQ,EACRlB,KAAK,UAGT,yBAAKU,UAAU,cACb,2BAAOM,QAAQ,SAAf,WACA,2BACEN,UAAU,eACVO,KAAK,QACLC,UAAQ,EACRlB,KAAK,WAGT,yBAAKU,UAAU,cACb,2BAAOM,QAAQ,SAAf,SACA,2BAAON,UAAU,eAAeO,KAAK,QAAQjB,KAAK,WAEpD,yDACA,yBAAKU,UAAU,cACb,2BAAOA,UAAU,mBACf,2BAAOO,KAAK,QAAQjB,KAAK,WAAWmB,MAAM,WAD5C,YAGA,2BAAOT,UAAU,mBACf,2BACEO,KAAK,QACLjB,KAAK,WACLmB,MAAM,eAJV,cAOA,2BAAOT,UAAU,mBACf,2BACEO,KAAK,QACLjB,KAAK,WACLmB,MAAM,gBAJV,eAOA,2BAAOT,UAAU,mBACf,2BAAOO,KAAK,QAAQjB,KAAK,WAAWmB,MAAM,aAD5C,aAIF,+DACA,yBAAKT,UAAU,cACb,2BAAOA,UAAU,gBACf,2BAAOO,KAAK,OAAOjB,KAAK,QAAQmB,MAAM,gBACtC,8CAEF,2BAAOT,UAAU,gBACf,2BAAOO,KAAK,OAAOjB,KAAK,QAAQmB,MAAM,eACtC,8CAIJ,yBAAKT,UAAU,cACb,2BAAOM,QAAQ,WAAf,aACA,8BAAUN,UAAU,eAAeO,KAAK,UAAUG,KAAK,IAAIF,UAAQ,EAAClB,KAAK,MAG3E,yBAAKU,UAAU,cACb,4BAAQA,UAAU,kBAAkBV,KAAK,UAAzC,eA/GV,EAAKM,MAAQ,CACXN,KAAM,OACNC,QAAS,IAJM,E,UADHoB,IAAMC,YCQJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASvB,OACP,kBAAC,IAAMwB,WAAP,KACE,kBAAC,EAAD,OAEFjC,SAASC,eAAe,SDyHpB,kBAAmBiC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMpC,c","file":"static/js/main.3e21ade2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: \"info\",\n      message: \"\"\n    };\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // Scroll to the top of the page to show the status message.\n    document.getElementById(\"heading\").scrollIntoView();\n    this.setState({ type: \"info\", message: \"Sending...\" }, this.sendFormData);\n  };\n\n  /**\n   * Submits form data to the web server.\n   */\n  sendFormData = () => {\n    setTimeout(() => {\n      this.setState({\n        type: \"success\",\n        message:\n          \"We have received your message and will get in touch shortly. Thanks!\"\n      });\n      document.getElementById(\"contact-form\").reset();\n    }, 100);\n  };\n\n  render = () => {\n    if (this.state.type && this.state.message) {\n      var classString = \"alert alert-\" + this.state.type;\n      var status = (\n        <div id=\"status\" className={classString}>\n          {this.state.message}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"container\">\n          <h2 id=\"heading\">\n            React FE contact form example for automation testing\n          </h2>\n          {status}\n          <form id=\"contact-form\" action=\"\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name *</label>\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                required\n                type=\"text\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email *</label>\n              <input\n                className=\"form-control\"\n                name=\"email\"\n                required\n                type=\"email\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"phone\">Phone</label>\n              <input className=\"form-control\" name=\"phone\" type=\"phone\" />\n            </div>\n            <h3>How can we help to you&#63; *</h3>\n            <div className=\"form-group\">\n              <label className=\"checkbox-inline\">\n                <input name=\"areas\" type=\"checkbox\" value=\"Manual\" />Analysis\n              </label>\n              <label className=\"checkbox-inline\">\n                <input\n                  name=\"areas\"\n                  type=\"checkbox\"\n                  value=\"Automation\"\n                />Automation\n              </label>\n              <label className=\"checkbox-inline\">\n                <input\n                  name=\"areas\"\n                  type=\"checkbox\"\n                  value=\"Development\"\n                />Development\n              </label>\n              <label className=\"checkbox-inline\">\n                <input name=\"areas\" type=\"checkbox\" value=\"Training\" />Training\n              </label>\n            </div>\n            <h3>How soon do we need to start&#63; *</h3>\n            <div className=\"form-group\">\n              <label className=\"radio-inline\">\n                <input name=\"when\" type=\"radio\" value=\"Immediately\" />\n                <span>Immediately</span>\n              </label>\n              <label className=\"radio-inline\">\n                <input name=\"when\" type=\"radio\" value=\"1-3 months\" />\n                <span>1-3 months</span>\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"project\">Comment *</label>\n              <textarea className=\"form-control\" name=\"comment\" rows=\"4\" required type=\"\" />\n            </div>\n\n            <div className=\"form-group\">\n              <button className=\"btn btn-primary\" type=\"submit\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}